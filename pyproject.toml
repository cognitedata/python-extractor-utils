[tool.poetry]
name = "cognite-extractor-utils"
version = "5.4.3"
description = "Utilities for easier development of extractors for CDF"
authors = ["Mathias Lohne <mathias.lohne@cognite.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/cognitedata/python-extractor-utils"

packages = [
    { include="cognite", from="." },
]

[tool.black]
line-length = 120
target_version = ['py38']
include = '\.py$'

[tool.ruff]
select = ["E", "F", "I", "T20", "S"]
ignore = ["S104", "S303", "S311", "E501"]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
]

line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "T201", "S105", "S106", "S608", "E501", "S113", "F841"]
"**/__init__.py" = ["F401"]
"docs/*" = ["E402"]

[tool.ruff.isort]
known-third-party = ["alembic"]

[tool.mypy]
pretty = true
check_untyped_defs = true
ignore_missing_imports = false
disallow_untyped_defs = true
follow_imports = "normal"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
exclude = "tests/*"

[tool.poetry.dependencies]
python = "^3.8.0"
cognite-sdk = ">=6.0, <7"
prometheus-client = ">0.7.0, <=1.0.0"
arrow = "^1.0.0"
pyyaml = ">=5.3.0, <7"
dacite = "^1.6.0"
psutil = "^5.7.0"
decorator = "^5.1.1"
more-itertools = "^10.0.0"
typing-extensions = ">=3.7.4, <5"
python-dotenv = "^1.0.0"
jq = [{version = "^1.3.0", platform = "darwin"}, {version = "^1.3.0", platform = "linux"}]

[tool.poetry.extras]
experimental = ["cognite-sdk-experimental"]

[tool.poetry.group.dev.dependencies]
black = "23.10.1"
mypy = "1.6.1"
ruff = "^0.1.0"
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.2.2"
pre-commit = "^3.3.0"
SecretStorage = "^3.1.2"
twine = "^4.0.0"
pytest-order = "^1.0.1"
parameterized = "*"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
