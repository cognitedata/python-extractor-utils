name: release

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry lock
        poetry install

    - name: Check codestyle
      run: pre-commit run --all

    - name: Run tests
      env:
          COGNITE_API_KEY: ${{ secrets.COGNITE_API_KEY }}
          COGNITE_PROJECT_CLIENT_ID: ${{ secrets.COGNITE_PROJECT_CLIENT_ID }}
          COGNITE_PROJECT_CLIENT_SECRET: ${{ secrets.COGNITE_PROJECT_CLIENT_SECRET }}
          COGNITE_PROJECT_SCOPES: ${{ secrets.COGNITE_PROJECT_SCOPES }}
          COGNITE_PROJECT_TOKEN_URL: ${{ secrets.COGNITE_PROJECT_TOKEN_URL }}
          COGNITE_PROJECT: extractor-tests
          COGNITE_BASE_URL: https://greenfield.cognitedata.com
      run: |
        coverage run --source cognite.extractorutils -m pytest -v tests
        coverage xml

    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

    - name: Build package
      run: poetry build

    - name: Build docs
      run: cd docs && make html

    - name: Release to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload --verbose dist/* || echo 'Version exists'
