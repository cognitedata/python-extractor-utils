name: test_and_build

on:
  pull_request:
    branches: [master]
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry lock
          poetry install

      - name: Check codestyle
        run: pre-commit run --all

      - name: Run tests
        env:
          COGNITE_CLIENT_ID: ${{ secrets.COGNITE_PROJECT_CLIENT_ID }}
          COGNITE_CLIENT_SECRET: ${{ secrets.COGNITE_PROJECT_CLIENT_SECRET }}
          COGNITE_TOKEN_SCOPES: ${{ secrets.COGNITE_PROJECT_SCOPES }}
          COGNITE_TOKEN_URL: ${{ secrets.COGNITE_PROJECT_TOKEN_URL }}
          KEYVAULT_CLIENT_ID: ${{ secrets.KEYVAULT_CLIENT_ID }}
          KEYVAULT_TENANT_ID: ${{ secrets.KEYVAULT_TENANT_ID }}
          KEYVAULT_CLIENT_SECRET: ${{ secrets.KEYVAULT_CLIENT_SECRET }}
          COGNITE_PROJECT: extractor-tests
          COGNITE_BASE_URL: https://greenfield.cognitedata.com
          COGNITE_DEV_PROJECT: extractor-aws-dub-dev-testing
          COGNITE_DEV_BASE_URL: https://aws-dub-dev.cognitedata.com/
          COGNITE_DEV_TOKEN_SCOPES: https://aws-dub-dev.cognitedata.com/.default
        run: |
          coverage run --source cognite.extractorutils -m pytest -v tests
          coverage xml

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

      - name: Build package
        run: poetry build

      - name: Build docs
        run: cd docs && make html
